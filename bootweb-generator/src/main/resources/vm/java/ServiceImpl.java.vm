package ${package}.service.impl;

import java.util.List;
import java.time.LocalDateTime;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import ${package}.mapper.${classNameWithPre}Mapper;
import ${package}.dto.${classNameWithPre}DTO;
import ${package}.service.I${classNameWithPre}Service;

/**
 * ${tableComment} Service业务层处理
 * 
 * @author ${author}
 * @version V1.0
 */
@Service
public class ${classNameWithPre}ServiceImpl implements I${classNameWithPre}Service {
	@Autowired
	private ${classNameWithPre}Mapper ${classname}Mapper;

	/**
     * 查询${tableComment}列表
     * 
     * @param ${classname} ${tableComment}
     * @return ${tableComment}集合
     */
	@Override
	public List<${classNameWithPre}DTO> select${className}List(${classNameWithPre}DTO ${classname}) {
	    return ${classname}Mapper.list${className}(${classname});
	}

	/**
	 * 查询${tableComment}信息
	 *
	 * @param ${primaryKey.attrname} ${tableComment}ID
	 * @return ${tableComment}
	 */
	@Override
	public ${classNameWithPre}DTO get${className}ById(${primaryKey.attrType} ${primaryKey.attrname}) {
		return ${classname}Mapper.select${className}ById(${primaryKey.attrname});
	}
	
    /**
     * 新增${tableComment}
     * 
     * @param ${classname} ${tableComment}
     * @return 结果
     */
	@Override
	public int insert${className}(${classNameWithPre}DTO ${classname}) {
		${classname}.setCreateTime(DateUtils.now());
	    return ${classname}Mapper.insert${className}(${classname});
	}
	
	/**
     * 修改${tableComment}
     * 
     * @param ${classname} ${tableComment}
     * @return 结果
     */
	@Override
	public int update${className}(${classNameWithPre}DTO ${classname}) {
		${classname}.setUpdateTime(DateUtils.now());
	    return ${classname}Mapper.update${className}(${classname});
	}

	/**
	 * 删除${tableComment}信息
	 *
	 * @param ${primaryKey.attrname} ${tableComment}ID
	 * @return 结果
	 */
	@Override
	public int delete${className}ById(${primaryKey.attrType} ${primaryKey.attrname}) {
		return ${classname}Mapper.delete${className}ById(${primaryKey.attrname});
	}

	/**
     * 删除${tableComment}对象
     * 
     * @param ids 需要删除的数据ID
     * @return 结果
     */
	@Override
	public int delete${className}ByIds(${primaryKey.attrType}[] ids) {
		return ${classname}Mapper.delete${className}ByIds(ids);
	}
}
